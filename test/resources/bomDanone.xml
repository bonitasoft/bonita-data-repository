<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<businessObjectModel modelVersion="1.0" productVersion="7.7.1">
    <businessObjects>
        <businessObject qualifiedName="com.danone.bpm.model.MasterData">
            <fields>
                <field type="STRING" length="255" name="name" nullable="true" collection="false"/>
                <field type="STRING" length="255" name="valueDefault" nullable="true" collection="false"/>
                <field type="STRING" length="255" name="valueAlternative" nullable="true" collection="false"/>
                <field type="STRING" length="255" name="project" nullable="true" collection="false"/>
                <field type="STRING" length="255" name="list" nullable="true" collection="false"/>
                <field type="INTEGER" length="255" name="orderPosition" nullable="true" collection="false"/>
                <field type="BOOLEAN" length="255" name="enabled" nullable="true" collection="false"/>
            </fields>
            <uniqueConstraints/>
            <queries>
                <query name="selectProjects" content="SELECT m &#xA;FROM MasterData m &#xA;WHERE &#xA;m.project = 'Framework'&#xA;AND m.list = 'Projects'&#xD;&#xA;AND m.enabled = true&#xA;ORDER BY m.orderPosition ASC" returnType="java.util.List">
                    <queryParameters/>
                </query>
                <query name="selectListsOfProject" content="SELECT m &#xD;&#xA;FROM MasterData m &#xD;&#xA;WHERE &#xD;&#xA;m.project = :project&#xD;&#xA;AND m.list = 'Lists'&#xD;&#xA;AND m.enabled = true&#xD;&#xA;ORDER BY m.orderPosition ASC" returnType="java.util.List">
                    <queryParameters>
                        <queryParameter name="project" className="java.lang.String"/>
                    </queryParameters>
                </query>
                <query name="selectItemsOfListOfProject" content="SELECT m &#xA;FROM MasterData m &#xA;WHERE &#xA;m.project = :project&#xA;AND m.list = :list&#xA;ORDER BY m.persistenceId ASC" returnType="java.util.List">
                    <queryParameters>
                        <queryParameter name="project" className="java.lang.String"/>
                        <queryParameter name="list" className="java.lang.String"/>
                    </queryParameters>
                </query>
                <query name="getList" content="SELECT m &#xD;&#xA;FROM MasterData m &#xD;&#xA;WHERE &#xD;&#xA;m.project = :project&#xD;&#xA;AND m.list = :list&#xD;&#xA;AND m.enabled = true&#xD;&#xA;ORDER BY m.persistenceId ASC" returnType="java.util.List">
                    <queryParameters>
                        <queryParameter name="project" className="java.lang.String"/>
                        <queryParameter name="list" className="java.lang.String"/>
                    </queryParameters>
                </query>
            </queries>
            <indexes/>
        </businessObject>
        <businessObject qualifiedName="com.danone.bpm.model.Delegation">
            <fields>
                <field type="LONG" length="255" name="delegatorId" nullable="true" collection="false"/>
                <field type="LONG" length="255" name="delegateId" nullable="true" collection="false"/>
                <field type="STRING" length="255" name="project" nullable="true" collection="false"/>
                <field type="LOCALDATETIME" length="255" name="dateStart" nullable="true" collection="false"/>
                <field type="LOCALDATETIME" length="255" name="dateEnd" nullable="true" collection="false"/>
                <field type="BOOLEAN" length="255" name="active" nullable="true" collection="false"/>
                <field type="STRING" length="512" name="comment" nullable="true" collection="false"/>
                <field type="LONG" length="255" name="caseId" nullable="true" collection="false"/>
                <field type="STRING" length="255" name="status" nullable="true" collection="false"/>
            </fields>
            <uniqueConstraints/>
            <queries>
                <query name="checkDelegationActive" content="SELECT d &#xA;FROM Delegation d &#xA;WHERE d.delegatorId = :delegatorId&#xA;AND d.delegateId = :delegateId&#xA;AND d.project = :project&#xD;&#xA;AND d.active = true&#xA;ORDER BY d.persistenceId ASC" returnType="java.util.List">
                    <queryParameters>
                        <queryParameter name="delegatorId" className="java.lang.Long"/>
                        <queryParameter name="delegateId" className="java.lang.Long"/>
                        <queryParameter name="project" className="java.lang.String"/>
                    </queryParameters>
                </query>
                <query name="countForCheckDelegationActive" content="SELECT count(d)&#xD;&#xA;FROM Delegation d &#xD;&#xA;WHERE d.delegatorId = :delegatorId&#xD;&#xA;AND d.delegateId = :delegateId&#xD;&#xA;AND d.project = :project&#xD;&#xA;AND d.active = true" returnType="java.lang.Long">
                    <queryParameters>
                        <queryParameter name="delegatorId" className="java.lang.Long"/>
                        <queryParameter name="delegateId" className="java.lang.Long"/>
                        <queryParameter name="project" className="java.lang.String"/>
                    </queryParameters>
                </query>
                <query name="listDelegationActivesUser" content="SELECT d &#xA;FROM Delegation d &#xA;WHERE (d.delegatorId = :delegatorId OR d.delegateId= :delegatorId)&#xA;AND d.active = true&#xA;ORDER BY d.persistenceId ASC" returnType="java.util.List">
                    <queryParameters>
                        <queryParameter name="delegatorId" className="java.lang.Long"/>
                    </queryParameters>
                </query>
                <query name="countForListDelegationActivesUser" content="SELECT count(d )&#xD;&#xA;FROM Delegation d &#xD;&#xA;WHERE (d.delegatorId = :delegatorId OR d.delegateId= :delegatorId)&#xD;&#xA;AND d.active = true" returnType="java.lang.Long">
                    <queryParameters>
                        <queryParameter name="delegatorId" className="java.lang.Long"/>
                    </queryParameters>
                </query>
                <query name="listDelegationExpireesUser" content="SELECT d &#xD;&#xA;FROM Delegation d &#xD;&#xA;WHERE d.delegatorId = :delegatorId&#xD;&#xA;AND d.active = false&#xD;&#xA;AND (d.status='Expired' OR d.status='Deleted')&#xD;&#xA;ORDER BY d.persistenceId ASC" returnType="java.util.List">
                    <queryParameters>
                        <queryParameter name="delegatorId" className="java.lang.Long"/>
                    </queryParameters>
                </query>
                <query name="countForListDelegationExpireesUser" content="SELECT count(d)&#xD;&#xA;FROM Delegation d &#xD;&#xA;WHERE d.delegatorId = :delegatorId&#xD;&#xA;AND (d.status='Expired' OR d.status='Deleted')&#xD;&#xA;AND d.active = false" returnType="java.lang.Long">
                    <queryParameters>
                        <queryParameter name="delegatorId" className="java.lang.Long"/>
                    </queryParameters>
                </query>
                <query name="listDelationActivedelegatorDomain" content="SELECT d &#xA;FROM Delegation d &#xA;WHERE d.delegatorId = :delegatorId&#xA;AND d.project = :project&#xA;AND (d.dateStart BETWEEN :dateStart1 AND :dateStart2 OR d.dateEnd BETWEEN :dateStart1 AND :dateStart2)&#xA;ORDER BY d.persistenceId ASC" returnType="java.util.List">
                    <queryParameters>
                        <queryParameter name="delegatorId" className="java.lang.Long"/>
                        <queryParameter name="project" className="java.lang.String"/>
                        <queryParameter name="dateStart1" className="java.time.LocalDateTime"/>
                        <queryParameter name="dateStart2" className="java.time.LocalDateTime"/>
                    </queryParameters>
                </query>
                <query name="countForListDelationActivedelegatorDomain" content="SELECT count(d)&#xD;&#xA;FROM Delegation d &#xD;&#xA;WHERE d.delegatorId = :delegatorId&#xD;&#xA;AND d.project = :project&#xD;&#xA;AND ((d.dateStart BETWEEN :dateStart1 AND :dateStart2) OR (d.dateEnd BETWEEN :dateStart1 AND :dateStart2))&#xD;&#xA;AND d.status!='Deleted'&#xD;&#xA;" returnType="java.lang.Long">
                    <queryParameters>
                        <queryParameter name="delegatorId" className="java.lang.Long"/>
                        <queryParameter name="project" className="java.lang.String"/>
                        <queryParameter name="dateStart1" className="java.time.LocalDateTime"/>
                        <queryParameter name="dateStart2" className="java.time.LocalDateTime"/>
                    </queryParameters>
                </query>
                <query name="listDelationActivedelegateDomain" content="SELECT d &#xA;FROM Delegation d &#xA;WHERE d.delegateId = :delegateId&#xA;AND d.project = :project&#xA;AND (d.dateStart BETWEEN :dateStart1 AND :dateStart2 OR d.dateEnd BETWEEN :dateStart1 AND :dateStart2)&#xA;ORDER BY d.persistenceId ASC" returnType="java.util.List">
                    <queryParameters>
                        <queryParameter name="delegateId" className="java.lang.Long"/>
                        <queryParameter name="project" className="java.lang.String"/>
                        <queryParameter name="dateStart1" className="java.time.LocalDateTime"/>
                        <queryParameter name="dateStart2" className="java.time.LocalDateTime"/>
                    </queryParameters>
                </query>
                <query name="countForListDelationActivedelegateDomain" content="SELECT count(d) &#xD;&#xA;FROM Delegation d &#xD;&#xA;WHERE d.delegateId = :delegateId&#xD;&#xA;AND d.project = :project&#xD;&#xA;AND ((d.dateStart BETWEEN :dateStart1 AND :dateStart2 OR d.dateEnd BETWEEN :dateStart1 AND :dateStart2) &#xD;&#xA;OR (d.dateStart&lt;= :dateStart1 AND d.dateEnd&gt;=:dateStart2) )&#xD;&#xA;AND d.status!='Deleted'" returnType="java.lang.Long">
                    <queryParameters>
                        <queryParameter name="delegateId" className="java.lang.Long"/>
                        <queryParameter name="project" className="java.lang.String"/>
                        <queryParameter name="dateStart1" className="java.time.LocalDateTime"/>
                        <queryParameter name="dateStart2" className="java.time.LocalDateTime"/>
                    </queryParameters>
                </query>
                <query name="listDelegationNonActivesUser" content="SELECT d &#xD;&#xA;FROM Delegation d &#xD;&#xA;WHERE d.delegatorId = :delegatorId&#xD;&#xA;AND d.active = false&#xD;&#xA;AND d.status='Inactive'&#xD;&#xA;ORDER BY d.persistenceId ASC" returnType="java.util.List">
                    <queryParameters>
                        <queryParameter name="delegatorId" className="java.lang.Long"/>
                    </queryParameters>
                </query>
                <query name="countForListDelegationNonActivesUser" content="SELECT count(d)&#xD;&#xA;FROM Delegation d &#xD;&#xA;WHERE d.delegatorId = :delegatorId&#xD;&#xA;AND d.active = false&#xD;&#xA;AND d.status='Inactive'" returnType="java.lang.Long">
                    <queryParameters>
                        <queryParameter name="delegatorId" className="java.lang.Long"/>
                    </queryParameters>
                </query>
                <query name="listDelegationNonActivesAdmin" content="SELECT d &#xD;&#xA;FROM Delegation d &#xD;&#xA;WHERE d.active = false&#xD;&#xA;AND d.status='Inactive'&#xD;&#xA;ORDER BY d.persistenceId ASC" returnType="java.util.List">
                    <queryParameters/>
                </query>
                <query name="countForListDelegationNonActivesAdmin" content="SELECT count(d)&#xD;&#xA;FROM Delegation d &#xD;&#xA;WHERE d.active = false&#xD;&#xA;AND d.status='Inactive'" returnType="java.lang.Long">
                    <queryParameters/>
                </query>
                <query name="listDelegationExpireesAdmin" content="SELECT d &#xD;&#xA;FROM Delegation d &#xD;&#xA;WHERE d.active = false&#xD;&#xA;AND (d.status='Expired' OR d.status='Deleted')&#xD;&#xA;ORDER BY d.persistenceId ASC" returnType="java.util.List">
                    <queryParameters/>
                </query>
                <query name="countForListDelegationExpireesAdmin" content="SELECT count(d)&#xD;&#xA;FROM Delegation d &#xD;&#xA;WHERE d.active = false&#xD;&#xA;AND (d.status='Expired' OR d.status='Deleted')" returnType="java.lang.Long">
                    <queryParameters/>
                </query>
            </queries>
            <indexes/>
        </businessObject>
        <businessObject qualifiedName="com.danone.bpm.model.RelRecoL">
            <fields>
                <field type="STRING" length="255" name="requester" nullable="true" collection="false"/>
                <field type="OFFSETDATETIME" length="255" name="creationDate" nullable="true" collection="false"/>
                <field type="STRING" length="255" name="modifyBy" nullable="true" collection="false"/>
                <field type="OFFSETDATETIME" length="255" name="modificationDate" nullable="true" collection="false"/>
                <field type="STRING" length="255" name="category" nullable="true" collection="false"/>
                <field type="STRING" length="255" name="projectName" nullable="true" collection="false"/>
                <field type="TEXT" length="255" name="projectDescription" nullable="true" collection="false"/>
                <field type="LOCALDATE" length="255" name="launchDate" nullable="true" collection="false"/>
                <field type="STRING" length="255" name="factory" nullable="true" collection="false"/>
                <field type="STRING" length="255" name="phase" nullable="true" collection="false"/>
                <relationField type="AGGREGATION" reference="com.danone.bpm.model.RelComments" fetchType="LAZY" name="comments" nullable="true" collection="true"/>
                <field type="STRING" length="255" name="finalDecision" nullable="true" collection="false"/>
                <field type="STRING" length="255" name="projectCode" nullable="true" collection="false"/>
                <field type="STRING" length="255" name="process" nullable="true" collection="false"/>
            </fields>
            <uniqueConstraints/>
            <queries/>
            <indexes/>
        </businessObject>
        <businessObject qualifiedName="com.danone.bpm.model.RelComments">
            <fields>
                <field type="STRING" length="255" name="author" nullable="true" collection="false"/>
                <field type="OFFSETDATETIME" length="255" name="creationDate" nullable="true" collection="false"/>
                <field type="TEXT" length="255" name="comment" nullable="true" collection="false"/>
                <field type="STRING" length="255" name="taskName" nullable="true" collection="false"/>
                <field type="STRING" length="255" name="decision" nullable="true" collection="false"/>
            </fields>
            <uniqueConstraints/>
            <queries/>
            <indexes/>
        </businessObject>
    </businessObjects>
</businessObjectModel>
